name: Backend CI/CD

on:
  push:
    branches: [main]
    paths:
      - "backend-ai/**"
  pull_request:
    branches: [main]
    paths:
      - "backend-ai/**"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: backend-ai
  REGION: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for skip pattern
        id: skip
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ \[skip\ ci\]|\[ci\ skip\]|\[skip\ workflow\]|\[workflow\ skip\] ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Authenticate to Google Cloud
        if: steps.skip.outputs.skip != 'true'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        if: steps.skip.outputs.skip != 'true'
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Container
        if: steps.skip.outputs.skip != 'true'
        run: |
          cd backend-ai
          gcloud builds submit \
            --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} \
            --project ${{ env.PROJECT_ID }}

      - name: Deploy to Cloud Run
        if: steps.skip.outputs.skip != 'true'
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --memory=1Gi \
            --cpu=1 \
            --timeout=300 \
            --max-instances=10 \
            --set-env-vars="NODE_ENV=production,GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},SUPABASE_DB_URL=${{ secrets.SUPABASE_DB_URL }}" \
            --cpu-boost \
            --execution-environment=gen2
